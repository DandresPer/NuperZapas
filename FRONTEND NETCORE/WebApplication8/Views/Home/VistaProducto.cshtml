@using Microsoft.AspNetCore.Http
@model Productos
@{
    ViewData["Title"] = "VistaProducto";
}

<script>
    function magnify(imgID, zoom) {
        var img, glass, w, h, bw;
        img = document.getElementById(imgID);

        /* Create magnifier glass: */
        glass = document.createElement("DIV");
        glass.setAttribute("class", "img-magnifier-glass");

        /* Insert magnifier glass: */
        img.parentElement.insertBefore(glass, img);

        /* Set background properties for the magnifier glass: */
        glass.style.backgroundImage = "url('" + img.src + "')";
        glass.style.backgroundRepeat = "no-repeat";
        glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
        bw = 3;
        w = glass.offsetWidth / 2;
        h = glass.offsetHeight / 2;

        /* Execute a function when someone moves the magnifier glass over the image: */
        glass.addEventListener("mousemove", moveMagnifier);
        img.addEventListener("mousemove", moveMagnifier);

        /*and also for touch screens:*/
        glass.addEventListener("touchmove", moveMagnifier);
        img.addEventListener("touchmove", moveMagnifier);
        function moveMagnifier(e) {
            var pos, x, y;
            /* Prevent any other actions that may occur when moving over the image */
            e.preventDefault();
            /* Get the cursor's x and y positions: */
            pos = getCursorPos(e);
            x = pos.x;
            y = pos.y;
            /* Prevent the magnifier glass from being positioned outside the image: */
            if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
            if (x < w / zoom) { x = w / zoom; }
            if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
            if (y < h / zoom) { y = h / zoom; }
            /* Set the position of the magnifier glass: */
            glass.style.left = (x - w) + "px";
            glass.style.top = (y - h) + "px";
            /* Display what the magnifier glass "sees": */
            glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
        }

        function getCursorPos(e) {
            var a, x = 0, y = 0;
            e = e || window.event;
            /* Get the x and y positions of the image: */
            a = img.getBoundingClientRect();
            /* Calculate the cursor's x and y coordinates, relative to the image: */
            x = e.pageX - a.left;
            y = e.pageY - a.top;
            /* Consider any page scrolling: */
            x = x - window.pageXOffset;
            y = y - window.pageYOffset;
            return { x: x, y: y };
        }
    }

</script>
<a id="backButton" href="##" onClick="history.go(-1); return false;"> Back</a>
<div id="vistaProductoContainer" class="container hideYScroll">
    <div class="vistaProductoRow row">
        @*~/images/productos/@Model.imgSmall*@
        <div id="img-magnifier-wrapper" class="col-md-9">
            <img id="vistaProductoImage" src="~/images/productos/@Model.imgBig" alt="PRODUCTO" />
        </div>


        <div class="col-md-3" id="vistaProductosDatos">
            @*<span id="vistaProductoNombre" class="vistaProductosDatosCampo">@Model.sku</span>*@
            <span id="vistaProductoNombre" class="vistaProductosDatosCampo">@Model.nombre</span>
            <span id="vistaProductoMarca" class="vistaProductosDatosCampo">@Model.marca</span>
            <span id="vistaProductoPrecio" class="vistaProductosDatosCampo">@Model.precio</span>
            <span>
                <form asp-controller="Pedido" asp-action="AddProducto" method="post" id="formItem">
                    <input name="sku" type="hidden" value=@Model.sku />
                    <input name="returnUrl" type="hidden" value=@Context.Request.Headers["Referer"].ToString() />
                    <input id="miCantidad" name="cantidad" type="number" value="1" min="1" />
                </form>
                    <button class="buttonStep btn-primary-form" onclick="this.parentNode.querySelector('#miCantidad').stepDown()">-</button>

                    <button class="buttonStep btn-primary-form" onclick="this.parentNode.querySelector('#miCantidad').stepUp()">+</button>
                    <input form ="formItem" class="btn-primary-form" style="width:150px; margin-top:50px;" type="submit" value="COMPRAR" />





                @*
        onclick="location.href='@Url.Action("AddProducto","Pedido")'"
        <input type="button" value="COMPRAR" onclick="location.href='@Url.Action("AddProducto","Pedido", new { sku = Model.sku, cantidad = 1, returnUrl = Context.Request.Headers["Referer"].ToString()})'" />*@

            </span>
        </div>
    </div>

</div>

@section Scripts
    {

    <script>

        function magnify(imgID, zoom) {
            var img, glass, w, h, bw;
            img = document.getElementById(imgID);

            /* Create magnifier glass: */
            glass = document.createElement("DIV");
            glass.setAttribute("class", "img-magnifier-glass");

            /* Insert magnifier glass: */
            img.parentElement.insertBefore(glass, img);

            /* Set background properties for the magnifier glass: */
            glass.style.backgroundImage = "url('" + img.src + "')";
            glass.style.backgroundRepeat = "no-repeat";
            glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
            bw = 3;
            w = glass.offsetWidth / 2;
            h = glass.offsetHeight / 2;

            /* Execute a function when someone moves the magnifier glass over the image: */
            glass.addEventListener("mousemove", moveMagnifier);
            img.addEventListener("mousemove", moveMagnifier);

            /*and also for touch screens:*/
            glass.addEventListener("touchmove", moveMagnifier);
            img.addEventListener("touchmove", moveMagnifier);
            function moveMagnifier(e) {
                var pos, x, y;
                /* Prevent any other actions that may occur when moving over the image */
                e.preventDefault();
                /* Get the cursor's x and y positions: */
                pos = getCursorPos(e);
                x = pos.x;
                y = pos.y;
                /* Prevent the magnifier glass from being positioned outside the image: */
                if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
                if (x < w / zoom) { x = w / zoom; }
                if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
                if (y < h / zoom) { y = h / zoom; }
                /* Set the position of the magnifier glass: */
                glass.style.left = (x - w) + "px";
                glass.style.top = (y - h) + "px";
                /* Display what the magnifier glass "sees": */
                glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
            }

            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /* Get the x and y positions of the image: */
                a = img.getBoundingClientRect();
                /* Calculate the cursor's x and y coordinates, relative to the image: */
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /* Consider any page scrolling: */
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return { x: x, y: y };
            }
        }

    </script>
    <script>

        magnify("vistaProductoImage", 3);

    </script>


    <script>
        $(window).on('load', function () {
            console.log("Entro");
            $("body:has(div.hideYScroll)").css('overflow-y', 'hidden');
            console.log("Salgo");
        });


    </script>

}